[2024-07-20 21:08:44,247] INFO [ControllerEventThread controllerId=101] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-07-20 21:08:44,258] INFO [Controller id=101] 101 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-07-20 21:08:44,260] INFO [Controller id=101] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2024-07-20 21:08:44,274] INFO [Controller id=101] Registering handlers (kafka.controller.KafkaController)
[2024-07-20 21:08:44,276] INFO [Controller id=101] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-07-20 21:08:44,277] INFO [Controller id=101] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-07-20 21:08:44,278] INFO [Controller id=101] Initializing controller context (kafka.controller.KafkaController)
[2024-07-20 21:08:44,284] INFO [Controller id=101] Initialized broker epochs cache: HashMap(101 -> 25) (kafka.controller.KafkaController)
[2024-07-20 21:08:44,287] DEBUG [Controller id=101] Register BrokerModifications handler for Set(101) (kafka.controller.KafkaController)
[2024-07-20 21:08:44,291] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 101 (kafka.controller.ControllerChannelManager)
[2024-07-20 21:08:44,294] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-07-20 21:08:44,295] INFO [Controller id=101] Currently active brokers in the cluster: Set(101) (kafka.controller.KafkaController)
[2024-07-20 21:08:44,295] INFO [Controller id=101] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-07-20 21:08:44,295] INFO [Controller id=101] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-07-20 21:08:44,295] INFO [Controller id=101] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-07-20 21:08:44,297] INFO [Controller id=101] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-07-20 21:08:44,297] INFO [Controller id=101] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-07-20 21:08:44,297] INFO [Controller id=101] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-07-20 21:08:44,298] INFO [Topic Deletion Manager 101] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-07-20 21:08:44,298] INFO [Controller id=101] Sending update metadata request (kafka.controller.KafkaController)
[2024-07-20 21:08:44,307] INFO [ReplicaStateMachine controllerId=101] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-07-20 21:08:44,307] INFO [ReplicaStateMachine controllerId=101] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-07-20 21:08:44,309] INFO [ReplicaStateMachine controllerId=101] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-07-20 21:08:44,309] DEBUG [ReplicaStateMachine controllerId=101] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-07-20 21:08:44,309] INFO [PartitionStateMachine controllerId=101] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-07-20 21:08:44,310] INFO [PartitionStateMachine controllerId=101] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-07-20 21:08:44,312] DEBUG [PartitionStateMachine controllerId=101] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-07-20 21:08:44,313] INFO [Controller id=101] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-07-20 21:08:44,313] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker training:9092 (id: 101 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to training:9092 (id: 101 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-07-20 21:08:44,316] INFO [Controller id=101] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-07-20 21:08:44,317] INFO [Controller id=101] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-07-20 21:08:44,317] INFO [Controller id=101] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-07-20 21:08:44,317] INFO [Controller id=101] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-07-20 21:08:44,318] INFO [Controller id=101] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-07-20 21:08:44,326] INFO [Controller id=101] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-07-20 21:08:44,416] INFO [RequestSendThread controllerId=101] Controller 101 connected to training:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-20 21:08:49,328] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:08:49,329] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:13:49,332] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:13:49,332] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:18:49,333] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:18:49,333] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:19:14,519] INFO [Controller id=101] New topics: [Set(topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic1,Some(3lJcxTgdQuelG7lUmlMxXA),Map(topic1-0 -> ReplicaAssignment(replicas=101, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-20 21:19:14,519] INFO [Controller id=101] New partition creation callback for topic1-0 (kafka.controller.KafkaController)
[2024-07-20 21:19:14,545] INFO [RequestSendThread controllerId=101] Controller 101 connected to training:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-20 21:19:14,546] DEBUG [Controller id=101] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2024-07-20 21:19:14,549] INFO [Controller id=101] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=101, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2024-07-20 21:23:49,333] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:23:49,334] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:23:49,337] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-07-20 21:23:49,340] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-07-20 21:28:49,340] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:28:49,341] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:28:49,341] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-07-20 21:28:49,341] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-07-20 21:33:49,342] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:33:49,342] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:33:49,343] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-07-20 21:33:49,343] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-07-20 21:38:49,343] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:38:49,344] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:38:49,344] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-07-20 21:38:49,344] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-07-20 21:43:49,345] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:43:49,345] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:43:49,345] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-07-20 21:43:49,346] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-07-20 21:48:49,346] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:48:49,346] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:48:49,347] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-07-20 21:48:49,347] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-07-20 21:49:30,520] INFO [Controller id=101] Shutting down broker 101 (kafka.controller.KafkaController)
[2024-07-20 21:49:30,520] DEBUG [Controller id=101] All shutting down brokers: 101 (kafka.controller.KafkaController)
[2024-07-20 21:49:30,521] DEBUG [Controller id=101] Live brokers:  (kafka.controller.KafkaController)
[2024-07-20 21:49:30,522] TRACE [Controller id=101] All leaders = topic1-0 -> (Leader:101,ISR:101,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-07-20 21:49:30,568] INFO [ControllerEventThread controllerId=101] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-07-20 21:49:30,568] INFO [ControllerEventThread controllerId=101] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-07-20 21:49:30,568] INFO [ControllerEventThread controllerId=101] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-07-20 21:49:30,569] DEBUG [Controller id=101] Resigning (kafka.controller.KafkaController)
[2024-07-20 21:49:30,569] DEBUG [Controller id=101] Unregister BrokerModifications handler for Set(101) (kafka.controller.KafkaController)
[2024-07-20 21:49:30,569] INFO [PartitionStateMachine controllerId=101] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-07-20 21:49:30,569] INFO [ReplicaStateMachine controllerId=101] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-07-20 21:49:30,570] INFO [RequestSendThread controllerId=101] Shutting down (kafka.controller.RequestSendThread)
[2024-07-20 21:49:30,570] INFO [RequestSendThread controllerId=101] Stopped (kafka.controller.RequestSendThread)
[2024-07-20 21:49:30,570] INFO [RequestSendThread controllerId=101] Shutdown completed (kafka.controller.RequestSendThread)
[2024-07-20 21:49:30,570] INFO [Controller id=101] Resigned (kafka.controller.KafkaController)
[2024-07-20 21:49:34,441] INFO [ControllerEventThread controllerId=101] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-07-20 21:49:34,449] INFO [Controller id=101] 101 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2024-07-20 21:49:34,450] INFO [Controller id=101] Registering handlers (kafka.controller.KafkaController)
[2024-07-20 21:49:34,451] INFO [Controller id=101] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-07-20 21:49:34,452] INFO [Controller id=101] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-07-20 21:49:34,453] INFO [Controller id=101] Initializing controller context (kafka.controller.KafkaController)
[2024-07-20 21:49:34,458] INFO [Controller id=101] Initialized broker epochs cache: HashMap(101 -> 53) (kafka.controller.KafkaController)
[2024-07-20 21:49:34,464] DEBUG [Controller id=101] Register BrokerModifications handler for Set(101) (kafka.controller.KafkaController)
[2024-07-20 21:49:34,468] DEBUG [Channel manager on controller 101]: Controller 101 trying to connect to broker 101 (kafka.controller.ControllerChannelManager)
[2024-07-20 21:49:34,470] INFO [RequestSendThread controllerId=101] Starting (kafka.controller.RequestSendThread)
[2024-07-20 21:49:34,471] INFO [Controller id=101] Currently active brokers in the cluster: Set(101) (kafka.controller.KafkaController)
[2024-07-20 21:49:34,471] INFO [Controller id=101] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-07-20 21:49:34,471] INFO [Controller id=101] Current list of topics in the cluster: HashSet(topic1) (kafka.controller.KafkaController)
[2024-07-20 21:49:34,472] INFO [Controller id=101] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-07-20 21:49:34,473] INFO [Controller id=101] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-07-20 21:49:34,474] INFO [Controller id=101] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-07-20 21:49:34,474] INFO [Controller id=101] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-07-20 21:49:34,474] INFO [Topic Deletion Manager 101] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-07-20 21:49:34,474] INFO [Controller id=101] Sending update metadata request (kafka.controller.KafkaController)
[2024-07-20 21:49:34,483] INFO [ReplicaStateMachine controllerId=101] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-07-20 21:49:34,485] INFO [ReplicaStateMachine controllerId=101] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-07-20 21:49:34,487] WARN [RequestSendThread controllerId=101] Controller 101's connection to broker training:9092 (id: 101 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to training:9092 (id: 101 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-07-20 21:49:34,495] INFO [ReplicaStateMachine controllerId=101] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-07-20 21:49:34,495] DEBUG [ReplicaStateMachine controllerId=101] Started replica state machine with initial state -> HashMap([Topic=topic1,Partition=0,Replica=101] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-07-20 21:49:34,495] INFO [PartitionStateMachine controllerId=101] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-07-20 21:49:34,496] INFO [PartitionStateMachine controllerId=101] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-07-20 21:49:34,497] DEBUG [PartitionStateMachine controllerId=101] Started partition state machine with initial state -> HashMap(topic1-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-07-20 21:49:34,497] INFO [Controller id=101] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2024-07-20 21:49:34,499] INFO [Controller id=101] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-07-20 21:49:34,499] INFO [Controller id=101] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-07-20 21:49:34,500] INFO [Controller id=101] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-07-20 21:49:34,500] INFO [Controller id=101] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-07-20 21:49:34,500] INFO [Controller id=101] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-07-20 21:49:34,504] INFO [Controller id=101] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-07-20 21:49:34,592] INFO [RequestSendThread controllerId=101] Controller 101 connected to training:9092 (id: 101 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-20 21:49:39,506] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:49:39,506] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:49:39,512] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-07-20 21:49:39,516] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-07-20 21:54:39,517] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:54:39,517] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:54:39,518] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-07-20 21:54:39,518] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
[2024-07-20 21:54:42,819] DEBUG [Controller id=101] Read current producerId block ProducerIdsBlock(assignedBrokerId=101, firstProducerId=0, size=1000), Zk path version 1 (kafka.controller.KafkaController)
[2024-07-20 21:54:42,829] INFO [Controller id=101] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=101, firstProducerId=1000, size=1000) by writing to Zk with path version 2 (kafka.controller.KafkaController)
[2024-07-20 21:59:39,519] INFO [Controller id=101] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-20 21:59:39,519] TRACE [Controller id=101] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-20 21:59:39,520] DEBUG [Controller id=101] Topics not in preferred replica for broker 101 Map() (kafka.controller.KafkaController)
[2024-07-20 21:59:39,520] TRACE [Controller id=101] Leader imbalance ratio for broker 101 is 0.0 (kafka.controller.KafkaController)
